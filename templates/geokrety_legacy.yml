---
version: '3.7'

x-variables: &variables
  depends_on:
    - db
  environment:
    TIMEZONE: "{{ params.tz | default(geokrety_tz) }}"
    SENTRY_DSN: "{{ params.sentry.dsn | default(geokrety_params.sentry.dsn) }}"
    SENTRY_ENV: "{{ params.sentry.env | default(geokrety_params.sentry.env) }}"
{% if params.new_env_flag is defined and params.new_env_flag %}
    GK_SITE_BASE_SERVER_URL: "https://{{ params.website.uri.0 }}"

    GK_MINIO_SERVER_URL_EXTERNAL: "https://{{ params.minio.uri_external }}"
    GK_MINIO_ACCESS_KEY: "{{ params.minio.access_key }}"
    GK_MINIO_SECRET_KEY: "{{ params.minio.secret_key }}"

    GK_DEBUG: "{{ params.debug is defined and params.debug }}"
    GK_ENVIRONMENT: "{{ params.environment | default(geokrety_params.environment) }}"
    GK_INSTANCE_NAME: "{{ params.name | default(geokrety_params.environment) }}"
    GK_DEPLOY_DATE: "{{ ansible_date_time.iso8601_micro }}"

    GK_SENTRY_DSN: "{{ params.sentry.dsn | default(geokrety_params.sentry.dsn) }}"
    GK_SENTRY_ENV: "{{ params.sentry.env | default(geokrety_params.sentry.env) }}"

    GK_DB_DSN: "{{ params.db.dsn | default(geokrety_params.db.dsn) }}"
    GK_DB_USER: "{{ params.db.user | default(geokrety_params.db.user) }}"
    GK_DB_PASSWORD: "{{ params.db.password | default(geokrety_params.db.password) }}"

    GK_SITE_EMAIL: "{{ params.mail_email.main | default(geokrety_params.mail_email.main) }}"
    GK_SITE_EMAIL_SUPPORT: "{{ params.mail_email.support | default(geokrety_params.mail_email.support) }}"
    GK_SITE_EMAIL_REGISTRATION: "{{ params.mail_email.registration | default(geokrety_params.mail_email.registration) }}"
    GK_SITE_EMAIL_MESSAGE_CENTER: "{{ params.mail_email.message_center | default(geokrety_params.mail_email.message_center) }}"
    GK_SMTP_USER: "{{ params.mail_username | default(geokrety_params.mail_username) }}"
    GK_SMTP_PASSWORD: "{{ params.mail_password | default(geokrety_params.mail_password) }}"
    GK_SMTP_HOST: "{{ params.mail_smtp_host | default(geokrety_params.mail_smtp_host) }}"

    GK_PASSWORD_HASH_ROTATION: "{{ params.password_hash_rotation | default(geokrety_params.password_hash_rotation) }}"
    GK_PASSWORD_HASH: "{{ params.password_hash_legacy | default(geokrety_params.password_hash_legacy) }}"
    GK_PASSWORD_SEED: "{{ params.password_seed | default(geokrety_params.password_seed) }}"

    GK_SESSION_IN_REDIS: "{{ params.session_in_redis | default(geokrety_params.session_in_redis) }}"

    GK_CDN_SERVER_URL: "https://{{ params.cdn.uri | default(geokrety_params.cdn_uri) }}"
    GK_MAP_URL: "{{ params.geokrety_map_url | default(geokrety_params.geokrety_map_url) }}"

    GK_GOOGLE_RECAPTCHA_PUBLIC_KEY: "{{ params.google.recaptcha_public_key | default(geokrety_params.google.recaptcha_public_key) }}"
    GK_GOOGLE_RECAPTCHA_SECRET_KEY: "{{ params.google.recaptcha_secret_key | default(geokrety_params.google.recaptcha_secret_key) }}"
{% endif %}

    # OBSOLETE: Old entries that will be removed one day (Still in use by branches < new-theme/f3)
    DB_HOSTNAME: "{{ params.db.host | default(geokrety_params.db.host) }}"
    DB_USERNAME: "{{ params.db.user | default(geokrety_params.db.user) }}"
    DB_PASSWORD: "{{ params.db.password | default(geokrety_params.db.password) }}"
    DB_NAME: "{{ params.db.name | default(geokrety_params.db.name) }}"
    DB_CHARSET: "{{ params.db.charset | default(geokrety_params.db.charset) }}"
    PROD_SERVER_NAME: "{{ geokrety_uri }}"
    SERVER_URL: "https://{{ params.website.uri.0 }}/"
    CDN_SERVER_URL: "https://{{ params.cdn.uri | default(geokrety_params.cdn_uri) }}"
    GOOGLE_MAP_KEY: "{{ params.google.map_key | default(geokrety_params.google.map_key) }}"
    GOOGLE_RECAPTCHA_PUBLIC_KEY: "{{ params.google.recaptcha_public_key | default(geokrety_params.google.recaptcha_public_key) }}"
    GOOGLE_RECAPTCHA_SECRET_KEY: "{{ params.google.recaptcha_secret_key | default(geokrety_params.google.recaptcha_secret_key) }}"
    PASSWORD_HASH: "{{ params.password_hash | default(geokrety_params.password_hash) }}"
    PASSWORD_HASH_LEGACY: "{{ params.password_hash_legacy | default(geokrety_params.password_hash_legacy) }}"
    API2LOGIN_MD5_STR1: "{{ params.api2login_md5_str1 | default(geokrety_params.api2login_md5_str1) }}"
    API2LOGIN_MD5_STR2: "{{ params.api2login_md5_str2 | default(geokrety_params.api2login_md5_str2) }}"
    SWISTAK_KEY: "{{ params.swistak_key | default(geokrety_params.swistak_key) }}"
    SWISTAK_IV32: "{{ params.swistak_iv32 | default(geokrety_params.swistak_iv32) }}"
    NEWS_PASSWORD: "{{ params.news_password | default(geokrety_params.news_password) }}"
    EXPORT_BYPASS_TOKEN: "{{ params.export_bypass_token | default(geokrety_params.export_bypass_token) }}"
    JRATING_TOKEN: "{{ params.jrating_token | default(geokrety_params.jrating_token) }}"
    POP_HOSTNAME: "{{ params.pop_hostname | default(geokrety_params.pop_hostname) }}"
    POP_PORT: "{{ params.pop_port | default(geokrety_params.pop_port) }}"
    POP_TLS: "{{ params.pop_tls | default(geokrety_params.pop_tls) }}"
    POP_USERNAME: "{{ params.mail_username | default(geokrety_params.mail_username) }}"
    POP_PASSWORD: "{{ params.mail_password | default(geokrety_params.mail_password) }}"
    SUPPORT_MAIL: "{{ params.mail_email.main | default(geokrety_params.mail_email.main) }}"
    PIWIK_URL: "{{ params.piwik.url | default(geokrety_params.piwik.url) }}"
    PIWIK_SITE_ID: "{{ params.piwik.site_id | default(geokrety_params.piwik.site_id) }}"
    PIWIK_TOKEN: "{{ params.piwik.token | default(geokrety_params.piwik.token) }}"
    GEONAMES_ENDPOINT: "http://api.geonames.org"
    GEONAMES_USERNAME: "{{ params.geonames_username | default(geokrety_params.geonames_username) }}"
    GEOKRETY_MAP_URL: "{{ params.geokrety_map_url | default(geokrety_params.geokrety_map_url) }}"
    OC_PL_OKAPI_CONSUMER_KEY: "{{ params.OKAPI.OC_PL.CONSUMER_KEY | default(geokrety_params.OKAPI.OC_PL.CONSUMER_KEY) }}"
    OC_UK_OKAPI_CONSUMER_KEY: "{{ params.OKAPI.OC_UK.CONSUMER_KEY | default(geokrety_params.OKAPI.OC_UK.CONSUMER_KEY) }}"
    OC_DE_OKAPI_CONSUMER_KEY: "{{ params.OKAPI.OC_DE.CONSUMER_KEY | default(geokrety_params.OKAPI.OC_DE.CONSUMER_KEY) }}"
    OC_US_OKAPI_CONSUMER_KEY: "{{ params.OKAPI.OC_US.CONSUMER_KEY | default(geokrety_params.OKAPI.OC_US.CONSUMER_KEY) }}"
    OC_NL_OKAPI_CONSUMER_KEY: "{{ params.OKAPI.OC_NL.CONSUMER_KEY | default(geokrety_params.OKAPI.OC_NL.CONSUMER_KEY) }}"
    OC_RO_OKAPI_CONSUMER_KEY: "{{ params.OKAPI.OC_RO.CONSUMER_KEY | default(geokrety_params.OKAPI.OC_RO.CONSUMER_KEY) }}"
    SESSION_IN_REDIS: "{{ params.session_in_redis | default(geokrety_params.session_in_redis) }}"
    ENVIRONMENT: "{{ params.environment | default(geokrety_params.environment) }}"

x-volumes-website: &volumes-website
  volumes:
{% if 'localdir' in params.website.keys() %}
    # Mount local dir as html root
    - {{ params.website.localdir }}:/var/www/geokrety/
{% endif %}
    # Configure mail forwarder
    - {{ geokrety_base_dir }}/ssmtp.conf:/etc/ssmtp/ssmtp.conf:ro
    # persistent vars
    - {{ geokrety_base_dir }}/data/cdn/obrazki/:/var/www/html/obrazki/
    - {{ geokrety_base_dir }}/data/cdn/obrazki-dowonu/:/var/www/html/obrazki-dowonu/
    - {{ geokrety_base_dir }}/data/cdn/obrazki-male/:/var/www/html/obrazki-male/
    - {{ geokrety_base_dir }}/data/cdn/statpics/:/var/www/html/statpics/
    - {{ geokrety_base_dir }}/data/cdn/mapki/:/var/www/html/mapki/
    # generated vars
    - {{ geokrety_base_dir }}/data/cdn/files/:/var/www/html/files/
    - {{ geokrety_base_dir }}/data/cdn/templates/wykresy/:/var/www/html/templates/wykresy/
    - {{ geokrety_base_dir }}/data/cdn/rzeczy/xml/:/var/www/html/rzeczy/xml/
    - {{ geokrety_base_dir }}/data/cdn/mapa-f/:/var/www/html/rzeczy/mapa-f/out/
    - {{ geokrety_base_dir }}/data/cdn/year-stats/:/var/www/html/templates/stats/year/

{% if 'cdn' in params.keys() %}
x-volumes-cdn: &volumes-cdn
  volumes:
{% if 'localdir' in params.website.keys() %}
    # Mount local dir as html root
    - {{ params.website.localdir }}/website:/var/www/html/
{% endif %}
    # Configure mail forwarder
    - {{ geokrety_base_dir }}/ssmtp.conf:/etc/ssmtp/ssmtp.conf:ro
    # The cdn data
{% if 'localdir' in params.cdn.keys() %}
    - {{ params.cdn.localdir }}/content:/usr/share/nginx/html
{% else %}
    - {{ geokrety_base_dir }}/git/cdn/content:/usr/share/nginx/html
{% endif %}
    # persistent vars
    - {{ geokrety_base_dir }}/data/cdn/obrazki/:/usr/share/nginx/html/images/obrazki/
    - {{ geokrety_base_dir }}/data/cdn/obrazki-dowonu/:/usr/share/nginx/html/images/obrazki-dowonu/
    - {{ geokrety_base_dir }}/data/cdn/obrazki-male/:/usr/share/nginx/html/images/obrazki-male/
    - {{ geokrety_base_dir }}/data/cdn/statpics/:/usr/share/nginx/html/images/statpics/
    - {{ geokrety_base_dir }}/data/cdn/mapki/:/usr/share/nginx/html/mapki/
    - {{ geokrety_base_dir }}/data/cdn/templates/wykresy/:/usr/share/nginx/html/images/wykresy/
    # generated vars
    - {{ geokrety_base_dir }}/data/cdn/files/:/usr/share/nginx/html/files/
    - {{ geokrety_base_dir }}/data/cdn/rzeczy/xml/:/usr/share/nginx/html/rzeczy/xml/
    - {{ geokrety_base_dir }}/data/cdn/mapa-f/:/usr/share/nginx/html/rzeczy/mapa-f/out/
    - {{ geokrety_base_dir }}/data/cdn/year-stats/:/usr/share/nginx/html/templates/stats/year/
{% endif %}

services:

  website:
    image: {{ geokrety_docker_image_website_image_name }}:{{ item }}
    <<: *variables
    <<: *volumes-website
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 30s
        monitor: 60s
        order: start-first
      labels:
        traefik.enable: "true"
        traefik.docker.network: "traefik_default"
        traefik.frontend.rule: "Host:{{ params.website.uri | join(',') }}"
        traefik.frontend.passHostHeader: "true"
        traefik.protocol: "http"
{% if params.new_env_flag is defined and params.new_env_flag %}
        traefik.backend.healthcheck.path: "/health"
        traefik.backend.loadbalancer.stickiness: "true"
{% endif %}
        traefik.port: 80
      restart_policy:
        condition: any
    networks:
      default:
      traefik_default:

{% if 'cdn' in params.keys() %}
  cdn:
    image: {{ geokrety_docker_image_cdn_image_name }}:{{ item }}
    <<: *volumes-cdn
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 10s
        order: start-first
      labels:
        traefik.enable: "true"
        traefik.docker.network: "traefik_default"
        traefik.frontend.rule: "Host:{{ params.cdn.uri | default(geokrety_params.cdn_uri) }}"
        traefik.frontend.passHostHeader: "true"
        traefik.protocol: "http"
        traefik.port: 80
      restart_policy:
        condition: any
    networks:
      default:
      traefik_default:
{% endif %}

{% if params.cron is defined %}
  cron:
    image: {{ geokrety_docker_image_cron_image_name }}:{{ item }}
{% if params.new_env_flag is defined and params.new_env_flag %}
    environment:
      GK_SITE_BASE_SERVER_URL: "https://{{ params.website.uri.0 }}"
{% else %}
    <<: *variables
    <<: *volumes-website
{% endif %}
    deploy:
      labels:
        traefik.enable: "false"
      restart_policy:
        condition: any
    networks:
      default:
{% endif %}

  db:
    image: mariadb:10.1
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--character-set-client-handshake=false"
      - "--max-connections=800"
      - "--max_allowed_packet=1024M"
      - "--wait-timeout=28800"
      - "--innodb-buffer-pool-size=8G"
      - "--innodb-buffer-pool-instances=8"
    volumes:
      - {{ geokrety_base_dir }}/mysql:/var/lib/mysql:rw
      - /etc/localtime:/etc/localtime:ro
      - {{ geokrety_home }}/instances/prod/dbdump/database.sql:/docker-entrypoint-initdb.d/database.sql:ro
    environment:
      TZ: {{ params.db.tz | default(params.tz | default(geokrety_tz)) }}
      MYSQL_ROOT_PASSWORD: {{ geokrety_org_mysql_root_password }}
      MYSQL_DATABASE: "{{ params.db.name | default(geokrety_params.db.name) }}"
      MYSQL_USER: "{{ params.db.user | default(geokrety_params.db.user) }}"
      MYSQL_PASSWORD: "{{ params.db.password | default(geokrety_params.db.password) }}"
    deploy:
      replicas: 1
      labels:
        traefik.enable: "false"
      restart_policy:
        condition: any
    networks:
      default:

  adminer:
    image: adminer
    depends_on:
      - db
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: "traefik_default"
        traefik.frontend.rule: "Host:{{ params.website.uri | join(',') }}; PathPrefix:/adminer"
        traefik.frontend.passHostHeader: "true"
        traefik.protocol: "http"
        traefik.port: 8080
        traefik.frontend.auth.basic.users: "{{ geokrety_adminer_users | default([]) | join(',') }}"
      restart_policy:
        condition: any
    networks:
      default:
      traefik_default:

  redis:
    image: redis:5
    deploy:
      labels:
        traefik.enable: "false"
      restart_policy:
        condition: any
    networks:
      default:

{% if params.minio is defined %}
  minio:
    image: minio/minio
    command:
      - "server"
      - "/data"
    volumes:
      - {{ geokrety_base_dir }}/minio/:/data/
    environment:
      MINIO_ACCESS_KEY: {{ params.minio.access_key }}
      MINIO_SECRET_KEY: {{ params.minio.secret_key }}
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: "traefik_default"
        traefik.frontend.rule: "Host:{{ params.minio.uri_external }}"
        traefik.frontend.passHostHeader: "true"
        traefik.protocol: "http"
        traefik.port: 9000
      restart_policy:
        condition: any
    networks:
      traefik_default:
      default:
{% endif %}

{% if params.monitoring is defined %}
  prometheus:
    image: {{ geokrety_docker_image_prometheus_image_name }}:{{ params.monitoring.prometheus.tag | default(geokrety_prometheus_image.docker_tag) }}
    command:
      - "--web.external-url=/prometheus"
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - {{ geokrety_base_dir }}/prometheus:/prometheus:rw
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: "traefik_default"
        traefik.frontend.rule: "Host:{{ params.website.uri | join(',') }}; PathPrefix:/prometheus"
        traefik.frontend.passHostHeader: "true"
        traefik.protocol: "http"
        traefik.port: 9090
        traefik.frontend.auth.basic.users: "{{ geokrety_adminer_users | default([]) | join(',') }}"
      restart_policy:
        condition: any
    networks:
      traefik_default:
      default:

  pushgateway:
    image: {{ params.monitoring.pushgateway.image | default('prom/pushgateway') }}:{{ params.monitoring.pushgateway.tag | default('latest') }}
    deploy:
      labels:
        traefik.enable: "false"
      restart_policy:
        condition: any
    networks:
      traefik_default:
      default:

  grafana:
    image: {{ geokrety_docker_image_grafana_image_name }}:{{ params.monitoring.grafana.tag | default(geokrety_grafana_image.docker_tag) }}
    volumes:
      - {{ geokrety_base_dir }}/grafana:/var/lib/grafana:rw
    environment:
      GF_SERVER_ROOT_URL: https://{{ params.website.uri | first }}/grafana
      GF_SERVER_SERVE_FROM_SUB_PATH: 'true'
      GF_SECURITY_ADMIN_PASSWORD: {{ params.monitoring.grafana.password }}
{% for conf in params.monitoring.grafana.env %}
      {{ conf.k }}: {{ conf.v }}
{% endfor %}

    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: "traefik_default"
        traefik.frontend.rule: "Host:{{ params.website.uri | join(',') }}; PathPrefixStrip:/grafana"
        traefik.frontend.passHostHeader: "true"
        traefik.protocol: "http"
        traefik.port: 3000
      restart_policy:
        condition: any
    networks:
      traefik_default:
      default:
{% endif %}

networks:
  default:
  traefik_default:
    external: true
